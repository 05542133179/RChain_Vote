{
  "version": 3,
  "sources": ["../../vuetify/src/components/VAutocomplete/VAutocomplete.tsx", "../../vuetify/src/composables/filter.ts"],
  "sourcesContent": ["// Styles\nimport './VAutocomplete.sass'\n\n// Components\nimport { VCheckboxBtn } from '@/components/VCheckbox'\nimport { VChip } from '@/components/VChip'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { VIcon } from '@/components/VIcon'\nimport { VList, VListItem } from '@/components/VList'\nimport { VMenu } from '@/components/VMenu'\nimport { makeSelectProps } from '@/components/VSelect/VSelect'\nimport { makeVTextFieldProps, VTextField } from '@/components/VTextField/VTextField'\nimport { VVirtualScroll } from '@/components/VVirtualScroll'\n\n// Composables\nimport { useScrolling } from '../VSelect/useScrolling'\nimport { useTextColor } from '@/composables/color'\nimport { makeFilterProps, useFilter } from '@/composables/filter'\nimport { useForm } from '@/composables/form'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useItems } from '@/composables/list-items'\nimport { useLocale } from '@/composables/locale'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeTransitionProps } from '@/composables/transition'\n\n// Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue'\nimport {\n  ensureValidVNode,\n  genericComponent,\n  IN_BROWSER,\n  matchesSelector,\n  noop,\n  omit,\n  propsFactory,\n  useRender,\n  wrapInArray,\n} from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\nimport type { FilterMatch } from '@/composables/filter'\nimport type { ListItem } from '@/composables/list-items'\nimport type { GenericProps } from '@/util'\n\nfunction highlightResult (text: string, matches: FilterMatch | undefined, length: number) {\n  if (matches == null) return text\n\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented')\n\n  return typeof matches === 'number' && ~matches\n    ? (\n      <>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(0, matches) }</span>\n        <span class=\"v-autocomplete__mask\">{ text.substr(matches, length) }</span>\n        <span class=\"v-autocomplete__unmask\">{ text.substr(matches + length) }</span>\n      </>\n    )\n    : text\n}\n\ntype Primitive = string | number | boolean | symbol\n\ntype Val <T, ReturnObject extends boolean> = [T] extends [Primitive]\n  ? T\n  : (ReturnObject extends true ? T : any)\n\ntype Value <T, ReturnObject extends boolean, Multiple extends boolean> =\n  Multiple extends true\n    ? readonly Val<T, ReturnObject>[]\n    : Val<T, ReturnObject> | null\n\nexport const makeVAutocompleteProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String] as PropType<boolean | 'exact'>,\n  },\n  search: String,\n\n  ...makeFilterProps({ filterKeys: ['title'] }),\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox',\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({ transition: false }),\n}, 'VAutocomplete')\n\nexport const VAutocomplete = genericComponent<new <\n  T extends readonly any[],\n  Item = T extends readonly (infer U)[] ? U : never,\n  ReturnObject extends boolean = false,\n  Multiple extends boolean = false,\n  V extends Value<Item, ReturnObject, Multiple> = Value<Item, ReturnObject, Multiple>\n>(\n  props: {\n    items?: T\n    returnObject?: ReturnObject\n    multiple?: Multiple\n    modelValue?: V | null\n    'onUpdate:modelValue'?: (val: V) => void\n  },\n  slots: Omit<VInputSlots & VFieldSlots, 'default'> & {\n    item: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    chip: { item: ListItem<Item>, index: number, props: Record<string, unknown> }\n    selection: { item: ListItem<Item>, index: number }\n    'prepend-item': never\n    'append-item': never\n    'no-data': never\n  }\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VAutocomplete',\n\n  props: makeVAutocompleteProps(),\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:search': (val: any) => true,\n    'update:modelValue': (val: any) => true,\n    'update:menu': (val: boolean) => true,\n  },\n\n  setup (props, { slots }) {\n    const { t } = useLocale()\n    const vTextFieldRef = ref()\n    const isFocused = shallowRef(false)\n    const isPristine = shallowRef(true)\n    const listHasFocus = shallowRef(false)\n    const vMenuRef = ref<VMenu>()\n    const vVirtualScrollRef = ref<VVirtualScroll>()\n    const _menu = useProxiedModel(props, 'menu')\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return\n        _menu.value = v\n      },\n    })\n    const selectionIndex = shallowRef(-1)\n    const color = computed(() => vTextFieldRef.value?.color)\n    const label = computed(() => menu.value ? props.closeText : props.openText)\n    const { items, transformIn, transformOut } = useItems(props)\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n    const search = useProxiedModel(props, 'search', '')\n    const model = useProxiedModel(\n      props,\n      'modelValue',\n      [],\n      v => transformIn(v === null ? [null] : wrapInArray(v)),\n      v => {\n        const transformed = transformOut(v)\n        return props.multiple ? transformed : (transformed[0] ?? null)\n      }\n    )\n    const form = useForm()\n    const { filteredItems, getMatches } = useFilter(props, items, () => isPristine.value ? '' : search.value)\n\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value))\n      }\n      return filteredItems.value\n    })\n\n    const selectedValues = computed(() => model.value.map(selection => selection.props.value))\n\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true ||\n        (props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title)\n      return selectFirst &&\n        displayItems.value.length > 0 &&\n        !isPristine.value &&\n        !listHasFocus.value\n    })\n\n    const menuDisabled = computed(() => (\n      (props.hideNoData && !items.value.length) ||\n      props.readonly || form?.isReadonly.value\n    ))\n\n    const listRef = ref<VList>()\n    const { onListScroll, onListKeydown } = useScrolling(listRef, vTextFieldRef)\n    function onClear (e: MouseEvent) {\n      if (props.openOnClear) {\n        menu.value = true\n      }\n\n      search.value = ''\n    }\n    function onMousedownControl () {\n      if (menuDisabled.value) return\n\n      menu.value = true\n    }\n    function onMousedownMenuIcon (e: MouseEvent) {\n      if (menuDisabled.value) return\n\n      if (isFocused.value) {\n        e.preventDefault()\n        e.stopPropagation()\n      }\n      menu.value = !menu.value\n    }\n    function onKeydown (e: KeyboardEvent) {\n      if (props.readonly || form?.isReadonly.value) return\n\n      const selectionStart = vTextFieldRef.value.selectionStart\n      const length = model.value.length\n\n      if (\n        selectionIndex.value > -1 ||\n        ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)\n      ) {\n        e.preventDefault()\n      }\n\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true\n      }\n\n      if (['Escape'].includes(e.key)) {\n        menu.value = false\n      }\n\n      if (highlightFirst.value && ['Enter', 'Tab'].includes(e.key)) {\n        select(displayItems.value[0])\n      }\n\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next')\n      }\n\n      if (!props.multiple) return\n\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1\n          }\n\n          return\n        }\n\n        const originalSelectionIndex = selectionIndex.value\n\n        const selectedItem = model.value[selectionIndex.value]\n        if (selectedItem && !selectedItem.props.disabled) select(selectedItem)\n\n        selectionIndex.value = originalSelectionIndex >= length - 1 ? (length - 2) : originalSelectionIndex\n      }\n\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return\n\n        const prev = selectionIndex.value > -1\n          ? selectionIndex.value - 1\n          : length - 1\n\n        if (model.value[prev]) {\n          selectionIndex.value = prev\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(search.value?.length, search.value?.length)\n        }\n      }\n\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return\n\n        const next = selectionIndex.value + 1\n\n        if (model.value[next]) {\n          selectionIndex.value = next\n        } else {\n          selectionIndex.value = -1\n          vTextFieldRef.value.setSelectionRange(0, 0)\n        }\n      }\n    }\n\n    function onInput (e: InputEvent) {\n      search.value = (e.target as HTMLInputElement).value\n    }\n\n    function onChange (e: Event) {\n      if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === (e.target as HTMLInputElement).value)\n        if (item) {\n          select(item)\n        }\n      }\n    }\n\n    function onAfterLeave () {\n      if (isFocused.value) {\n        isPristine.value = true\n        vTextFieldRef.value?.focus()\n      }\n    }\n\n    function onFocusin (e: FocusEvent) {\n      isFocused.value = true\n      setTimeout(() => {\n        listHasFocus.value = true\n      })\n    }\n    function onFocusout (e: FocusEvent) {\n      listHasFocus.value = false\n    }\n    function onUpdateModelValue (v: any) {\n      if (v == null || (v === '' && !props.multiple)) model.value = []\n    }\n\n    const isSelecting = shallowRef(false)\n\n    function select (item: ListItem) {\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value))\n\n        if (index === -1) {\n          model.value = [...model.value, item]\n        } else {\n          const value = [...model.value]\n          value.splice(index, 1)\n          model.value = value\n        }\n      } else {\n        model.value = [item]\n\n        isSelecting.value = true\n\n        search.value = item.title\n\n        menu.value = false\n        isPristine.value = true\n\n        nextTick(() => (isSelecting.value = false))\n      }\n    }\n\n    watch(isFocused, (val, oldVal) => {\n      if (val === oldVal) return\n\n      if (val) {\n        isSelecting.value = true\n        search.value = props.multiple ? '' : String(model.value.at(-1)?.props.title ?? '')\n        isPristine.value = true\n\n        nextTick(() => isSelecting.value = false)\n      } else {\n        if (!props.multiple && !search.value) model.value = []\n        else if (\n          highlightFirst.value &&\n          !listHasFocus.value &&\n          !model.value.some(({ value }) => value === displayItems.value[0].value)\n        ) {\n          select(displayItems.value[0])\n        }\n        menu.value = false\n        search.value = ''\n        selectionIndex.value = -1\n      }\n    })\n\n    watch(search, val => {\n      if (!isFocused.value || isSelecting.value) return\n\n      if (val) menu.value = true\n\n      isPristine.value = !val\n    })\n\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(\n          item => model.value.some(s => item.value === s.value)\n        )\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index)\n        })\n      }\n    })\n\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip)\n      const hasList = !!(\n        (!props.hideNoData || displayItems.value.length) ||\n        slots['prepend-item'] ||\n        slots['append-item'] ||\n        slots['no-data']\n      )\n      const isDirty = model.value.length > 0\n      const textFieldProps = VTextField.filterProps(props)\n\n      return (\n        <VTextField\n          ref={ vTextFieldRef }\n          { ...textFieldProps }\n          modelValue={ search.value }\n          onUpdate:modelValue={ onUpdateModelValue }\n          v-model:focused={ isFocused.value }\n          validationValue={ model.externalValue }\n          counterValue={ model.value.length }\n          dirty={ isDirty }\n          onInput={ onInput }\n          onChange={ onChange }\n          class={[\n            'v-autocomplete',\n            `v-autocomplete--${props.multiple ? 'multiple' : 'single'}`,\n            {\n              'v-autocomplete--active-menu': menu.value,\n              'v-autocomplete--chips': !!props.chips,\n              'v-autocomplete--selection-slot': !!slots.selection,\n              'v-autocomplete--selecting-index': selectionIndex.value > -1,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          readonly={ props.readonly }\n          placeholder={ isDirty ? undefined : props.placeholder }\n          onClick:clear={ onClear }\n          onMousedown:control={ onMousedownControl }\n          onKeydown={ onKeydown }\n        >\n          {{\n            ...slots,\n            default: () => (\n              <>\n                <VMenu\n                  ref={ vMenuRef }\n                  v-model={ menu.value }\n                  activator=\"parent\"\n                  contentClass=\"v-autocomplete__content\"\n                  disabled={ menuDisabled.value }\n                  eager={ props.eager }\n                  maxHeight={ 310 }\n                  openOnClick={ false }\n                  closeOnContentClick={ false }\n                  transition={ props.transition }\n                  onAfterLeave={ onAfterLeave }\n                  { ...props.menuProps }\n                >\n                  { hasList && (\n                    <VList\n                      ref={ listRef }\n                      selected={ selectedValues.value }\n                      selectStrategy={ props.multiple ? 'independent' : 'single-independent' }\n                      onMousedown={ (e: MouseEvent) => e.preventDefault() }\n                      onKeydown={ onListKeydown }\n                      onFocusin={ onFocusin }\n                      onFocusout={ onFocusout }\n                      onScrollPassive={ onListScroll }\n                      tabindex=\"-1\"\n                      color={ props.itemColor ?? props.color }\n                    >\n                      { slots['prepend-item']?.() }\n\n                      { !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? (\n                        <VListItem title={ t(props.noDataText) } />\n                      ))}\n\n                      <VVirtualScroll ref={ vVirtualScrollRef } renderless items={ displayItems.value }>\n                        { ({ item, index, itemRef }) => {\n                          const itemProps = mergeProps(item.props, {\n                            ref: itemRef,\n                            key: index,\n                            active: (highlightFirst.value && index === 0) ? true : undefined,\n                            onClick: () => select(item),\n                          })\n\n                          return slots.item?.({\n                            item,\n                            index,\n                            props: itemProps,\n                          }) ?? (\n                            <VListItem { ...itemProps }>\n                            {{\n                              prepend: ({ isSelected }) => (\n                                <>\n                                  { props.multiple && !props.hideSelected ? (\n                                    <VCheckboxBtn\n                                      key={ item.value }\n                                      modelValue={ isSelected }\n                                      ripple={ false }\n                                      tabindex=\"-1\"\n                                    />\n                                  ) : undefined }\n\n                                  { item.props.prependIcon && (\n                                    <VIcon icon={ item.props.prependIcon } />\n                                  )}\n                                </>\n                              ),\n                              title: () => {\n                                return isPristine.value\n                                  ? item.title\n                                  : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0)\n                              },\n                            }}\n                          </VListItem>\n                          )\n                        }}\n                      </VVirtualScroll>\n\n                      { slots['append-item']?.() }\n                    </VList>\n                  )}\n                </VMenu>\n\n                { model.value.map((item, index) => {\n                  function onChipClose (e: Event) {\n                    e.stopPropagation()\n                    e.preventDefault()\n\n                    select(item)\n                  }\n\n                  const slotProps = {\n                    'onClick:close': onChipClose,\n                    onMousedown (e: MouseEvent) {\n                      e.preventDefault()\n                      e.stopPropagation()\n                    },\n                    modelValue: true,\n                    'onUpdate:modelValue': undefined,\n                  }\n\n                  const hasSlot = hasChips ? !!slots.chip : !!slots.selection\n                  const slotContent = hasSlot\n                    ? ensureValidVNode(\n                      hasChips\n                        ? slots.chip!({ item, index, props: slotProps })\n                        : slots.selection!({ item, index })\n                    )\n                    : undefined\n\n                  if (hasSlot && !slotContent) return undefined\n\n                  return (\n                    <div\n                      key={ item.value }\n                      class={[\n                        'v-autocomplete__selection',\n                        index === selectionIndex.value && [\n                          'v-autocomplete__selection--selected',\n                          textColorClasses.value,\n                        ],\n                      ]}\n                      style={ index === selectionIndex.value ? textColorStyles.value : {} }\n                    >\n                      { hasChips ? (\n                        !slots.chip ? (\n                          <VChip\n                            key=\"chip\"\n                            closable={ props.closableChips }\n                            size=\"small\"\n                            text={ item.title }\n                            disabled={ item.props.disabled }\n                            { ...slotProps }\n                          />\n                        ) : (\n                          <VDefaultsProvider\n                            key=\"chip-defaults\"\n                            defaults={{\n                              VChip: {\n                                closable: props.closableChips,\n                                size: 'small',\n                                text: item.title,\n                              },\n                            }}\n                          >\n                            { slotContent }\n                          </VDefaultsProvider>\n                        )\n                      ) : (\n                        slotContent ?? (\n                          <span class=\"v-autocomplete__selection-text\">\n                            { item.title }\n                            { props.multiple && (index < model.value.length - 1) && (\n                              <span class=\"v-autocomplete__selection-comma\">,</span>\n                            )}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  )\n                })}\n              </>\n            ),\n            'append-inner': (...args) => (\n              <>\n                { slots['append-inner']?.(...args) }\n                { props.menuIcon ? (\n                  <VIcon\n                    class=\"v-autocomplete__menu-icon\"\n                    icon={ props.menuIcon }\n                    onMousedown={ onMousedownMenuIcon }\n                    onClick={ noop }\n                    aria-label={ t(label.value) }\n                    title={ t(label.value) }\n                  />\n                ) : undefined }\n              </>\n            ),\n          }}\n        </VTextField>\n      )\n    })\n\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      filteredItems,\n      select,\n    }, vTextFieldRef)\n  },\n})\n\nexport type VAutocomplete = InstanceType<typeof VAutocomplete>\n", "/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { computed, ref, unref, watchEffect } from 'vue'\nimport { getPropertyFromItem, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { MaybeRef } from '@/util'\n\n/**\n * - match without highlight\n * - single match (index), length already known\n * - single match (start, end)\n * - multiple matches (start, end), probably shouldn't overlap\n */\nexport type FilterMatch = boolean | number | [number, number] | [number, number][]\nexport type FilterFunction = (value: string, query: string, item?: InternalItem) => FilterMatch\nexport type FilterKeyFunctions = Record<string, FilterFunction>\nexport type FilterKeys = string | string[]\nexport type FilterMode = 'some' | 'every' | 'union' | 'intersection'\n\nexport interface FilterProps {\n  customFilter?: FilterFunction\n  customKeyFilter?: FilterKeyFunctions\n  filterKeys?: FilterKeys\n  filterMode?: FilterMode\n  noFilter?: boolean\n}\n\nexport interface InternalItem<T = any> {\n  value: any\n  raw: T\n}\n\n// Composables\nexport const defaultFilter: FilterFunction = (value, query, item) => {\n  if (value == null || query == null) return -1\n\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase())\n}\n\nexport const makeFilterProps = propsFactory({\n  customFilter: Function as PropType<FilterFunction>,\n  customKeyFilter: Object as PropType<FilterKeyFunctions>,\n  filterKeys: [Array, String] as PropType<FilterKeys>,\n  filterMode: {\n    type: String as PropType<FilterMode>,\n    default: 'intersection',\n  },\n  noFilter: Boolean,\n}, 'filter')\n\nexport function filterItems (\n  items: readonly (readonly [item: InternalItem, transformed: {}])[] | readonly InternalItem[],\n  query: string,\n  options?: {\n    customKeyFilter?: FilterKeyFunctions\n    default?: FilterFunction\n    filterKeys?: FilterKeys\n    filterMode?: FilterMode\n    noFilter?: boolean\n  },\n) {\n  const array: { index: number, matches: Record<string, FilterMatch> }[] = []\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length\n\n  if (!items?.length) return array\n\n  loop:\n  for (let i = 0; i < items.length; i++) {\n    const [item, transformed = item] = wrapInArray(items[i]) as readonly [InternalItem, {}]\n    const customMatches: Record<string, FilterMatch> = {}\n    const defaultMatches: Record<string, FilterMatch> = {}\n    let match: FilterMatch = -1\n\n    if (query && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(transformed)\n\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(transformed, key, transformed)\n          const keyFilter = options?.customKeyFilter?.[key]\n\n          match = keyFilter\n            ? keyFilter(value, query, item)\n            : filter(value, query, item)\n\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match\n            else defaultMatches[key] = match\n          } else if (options?.filterMode === 'every') {\n            continue loop\n          }\n        }\n      } else {\n        match = filter(item, query, item)\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match\n        }\n      }\n\n      const defaultMatchesLength = Object.keys(defaultMatches).length\n      const customMatchesLength = Object.keys(customMatches).length\n\n      if (!defaultMatchesLength && !customMatchesLength) continue\n\n      if (\n        options?.filterMode === 'union' &&\n        customMatchesLength !== customFiltersLength &&\n        !defaultMatchesLength\n      ) continue\n\n      if (\n        options?.filterMode === 'intersection' &&\n        (\n          customMatchesLength !== customFiltersLength ||\n          !defaultMatchesLength\n        )\n      ) continue\n    }\n\n    array.push({ index: i, matches: { ...defaultMatches, ...customMatches } })\n  }\n\n  return array\n}\n\nexport function useFilter <T extends InternalItem> (\n  props: FilterProps,\n  items: MaybeRef<T[]>,\n  query: Ref<string | undefined> | (() => string | undefined),\n  options?: {\n    transform?: (item: T) => {}\n    customKeyFilter?: MaybeRef<FilterKeyFunctions | undefined>\n  }\n) {\n  const filteredItems: Ref<T[]> = ref([])\n  const filteredMatches: Ref<Map<unknown, Record<string, FilterMatch>>> = ref(new Map())\n  const transformedItems = computed(() => (\n    options?.transform\n      ? unref(items).map(item => ([item, options.transform!(item)] as const))\n      : unref(items)\n  ))\n\n  watchEffect(() => {\n    const _query = typeof query === 'function' ? query() : unref(query)\n    const strQuery = (\n      typeof _query !== 'string' &&\n      typeof _query !== 'number'\n    ) ? '' : String(_query)\n\n    const results = filterItems(\n      transformedItems.value,\n      strQuery,\n      {\n        customKeyFilter: {\n          ...props.customKeyFilter,\n          ...unref(options?.customKeyFilter),\n        },\n        default: props.customFilter,\n        filterKeys: props.filterKeys,\n        filterMode: props.filterMode,\n        noFilter: props.noFilter,\n      },\n    )\n\n    const originalItems = unref(items)\n\n    const _filteredItems: typeof filteredItems['value'] = []\n    const _filteredMatches: typeof filteredMatches['value'] = new Map()\n    results.forEach(({ index, matches }) => {\n      const item = originalItems[index]\n      _filteredItems.push(item)\n      _filteredMatches.set(item.value, matches)\n    })\n    filteredItems.value = _filteredItems\n    filteredMatches.value = _filteredMatches\n  })\n\n  function getMatches (item: T) {\n    return filteredMatches.value.get(item.value)\n  }\n\n  return { filteredItems, filteredMatches, getMatches }\n}\n"],
  "mappings": "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",
  "names": ["defaultFilter", "value", "query", "item", "toString", "toLocaleLowerCase", "indexOf", "makeFilterProps", "propsFactory", "customFilter", "Function", "customKeyFilter", "Object", "filterKeys", "Array", "String", "filterMode", "type", "default", "noFilter", "Boolean", "filterItems", "items", "options", "array", "filter", "keys", "wrapInArray", "customFiltersLength", "length", "loop", "i", "transformed", "customMatches", "defaultMatches", "match", "key", "getPropertyFromItem", "keyFilter", "title", "defaultMatchesLength", "customMatchesLength", "push", "index", "matches", "useFilter", "props", "filteredItems", "ref", "filteredMatches", "Map", "transformedItems", "computed", "transform", "unref", "map", "watchEffect", "_query", "strQuery", "results", "originalItems", "_filteredItems", "_filteredMatches", "forEach", "_ref", "set", "getMatches", "get", "highlightResult", "text", "matches", "length", "Array", "isArray", "Error", "_createVNode", "_Fragment", "substr", "makeVAutocompleteProps", "propsFactory", "autoSelectFirst", "type", "Boolean", "String", "search", "makeFilterProps", "filterKeys", "makeSelectProps", "omit", "makeVTextFieldProps", "modelValue", "role", "makeTransitionProps", "transition", "VAutocomplete", "genericComponent", "name", "props", "emits", "focused", "val", "setup", "_ref", "slots", "t", "useLocale", "vTextFieldRef", "ref", "isFocused", "shallowRef", "isPristine", "listHasFocus", "vMenuRef", "vVirtualScrollRef", "_menu", "useProxiedModel", "menu", "computed", "get", "value", "set", "v", "Î¨openChildren", "selectionIndex", "color", "label", "closeText", "openText", "items", "transformIn", "transformOut", "useItems", "textColorClasses", "textColorStyles", "useTextColor", "model", "wrapInArray", "transformed", "multiple", "form", "useForm", "filteredItems", "getMatches", "useFilter", "displayItems", "hideSelected", "filter", "filteredItem", "some", "s", "selectedValues", "map", "selection", "highlightFirst", "selectFirst", "title", "menuDisabled", "hideNoData", "readonly", "isReadonly", "listRef", "onListScroll", "onListKeydown", "useScrolling", "onClear", "e", "openOnClear", "onMousedownControl", "onMousedownMenuIcon", "preventDefault", "stopPropagation", "onKeydown", "selectionStart", "includes", "key", "select", "focus", "originalSelectionIndex", "selectedItem", "disabled", "prev", "setSelectionRange", "next", "onInput", "target", "onChange", "matchesSelector", "item", "find", "onAfterLeave", "onFocusin", "setTimeout", "onFocusout", "onUpdateModelValue", "isSelecting", "index", "findIndex", "valueComparator", "splice", "nextTick", "watch", "oldVal", "at", "_ref2", "IN_BROWSER", "window", "requestAnimationFrame", "scrollToIndex", "useRender", "hasChips", "chips", "chip", "hasList", "isDirty", "textFieldProps", "VTextField", "filterProps", "_mergeProps", "$event", "externalValue", "class", "style", "undefined", "placeholder", "default", "VMenu", "eager", "menuProps", "VList", "itemColor", "VListItem", "noDataText", "VVirtualScroll", "_ref3", "itemRef", "itemProps", "mergeProps", "active", "onClick", "prepend", "_ref4", "isSelected", "VCheckboxBtn", "prependIcon", "VIcon", "onChipClose", "slotProps", "onMousedown", "hasSlot", "slotContent", "ensureValidVNode", "VChip", "closableChips", "VDefaultsProvider", "closable", "size", "_createTextVNode", "_len", "arguments", "args", "_key", "menuIcon", "noop", "forwardRefs"]
}
